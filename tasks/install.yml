---
- name: Ensure APT depedencies are present
  apt:
    name:
      - cron
      - python
    state: present
    update_cache: true
    cache_valid_time: 120

- name: Ensure source path is created
  file:
    path: "/var/awslogs"
    state: directory
    mode: 0755

- name: Download install script
  get_url:
    url: https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
    dest: /tmp/awslogs.py
    mode: 0755

- name: Ensure awslogs.conf is updated
  copy:
    dest: "/var/awslogs/awslogs.conf"
    content: |
      [general]
      state_file = /var/awslogs/state/agent-state
      logging_config_file = /var/awslogs/awslogs.conf
      use_gzip_http_content_encoding = true
  notify: restart awslogs

- name: Ensue the CloudWatch logs agent is installed
  command: >
    python /tmp/awslogs.py -n -r {{ aws_region }}
    -c /var/awslogs/awslogs.conf
  args:
    creates: "/var/awslogs/bin/awslogs-agent-launcher.sh"

- name: Ensure awslogs is started and enabled at startup
  service:
    name: awslogs
    state: started
    enabled: true

- name: Get current configuration files
  command: ls -1 /var/awslogs/etc/config
  register: conf_files
  changed_when: false

- name: Ensure that old configuration files are not present
  file:
    path: "/var/awslogs/etc/config/{{ item }}"
    state: absent
  notify: restart awslogs
  with_items: "{{ conf_files.stdout_lines }}"
  when: item not in cw_logs_files
  changed_when: false

- name: Ensure logs configurations are updated
  copy:
    dest: "/var/awslogs/etc/config/{{ item.name }}.conf"
    content: |
      [{{ item.name }}]
      {% for key, value in item.args.items() %}
      {{ key }} = {{ value }}
      {% endfor %}
  changed_when: false

  with_items: "{{ cw_logs_files }}"
  notify: restart awslogs
